{"version":3,"sources":["config.js","utils/http.js","services/news.js","components/home/Home.js","App.js","serviceWorker.js","index.js"],"names":["config","baseURI","api","endpoints","all","filter","http","axios","create","baseURL","headers","fetchNews","a","url","get","response","filterNews","data","options","value","label","Home","props","handleChange","selectedOption","setState","console","log","fetchAllData","isRequesting","newsService","state","swal","this","Header","accessor","resizable","sortable","minWidth","className","headerClassName","Cell","e","href","length","Fragment","onChange","onClick","columns","buildColumns","showPagination","defaultPageSize","filterable","pageSizeOptions","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.93423e3c.chunk.js","sourcesContent":["const config = {\n    // env: process.env.NODE_ENV,\n    // baseURI: \"http://localhost:5000\", //process.env.REACT_APP_API_BASE_URI,\n    baseURI: \"http://manaslu.pcampus.edu.np/dnc\",\n//     api: {\n//         endpoints: {\n//             all: \"/news\",\n//             filter: \"/news/filter\"\n//         }\n//     }\n// };\n\n      api: {\n          endpoints: {\n              all: \"/news\",\n              filter: \"/news/\"\n          }\n      }\n      };\nexport default config;\n","import axios from \"axios\";\n\nimport config from \"../config\";\n\nlet http = axios.create({\n    baseURL: config.baseURI,\n    headers: {\n        \"Content-Type\": \"application/json\"\n    }\n});\n\nexport default http;\n","import config from \"../config\";\nimport http from \"../utils/http\";\n\nconst {\n  api\n} = config;\n\n/**\n * Get users.\n *\n * @return {Object}\n */\nexport async function fetchNews() {\n  const url = `${api.endpoints.all}`;\n  const response = await http.get(url);\n\n  return response;\n}\n\n/**\n * Get users.\n *\n * @return {Object}\n */\nexport async function filterNews(data) {\n  const url = `${api.endpoints.filter}` + data;\n  const response = await http.get(url);\n\n  return response;\n}\n","import React from \"react\";\nimport * as newsService from \"../../services/news\";\nimport \"react-table/react-table.css\";\nimport ReactTable from \"react-table\";\nimport Select from \"react-select\";\nimport Spinner from \"../common/Spinner\";\nimport swal from 'sweetalert';\n\nconst options = [\n    { value: \"hydrological\", label: \"Hydrological\" },\n    { value: \"manmade\", label: \"Manmade\" },\n    { value: \"meteorological\", label: \"Meteorological\" },\n    { value: \"biological\", label: \"Biological\" },\n    { value: \"geophysical\", label: \"Geophysical\" },\n    { value: \"climatological\", label: \"Climatological\" },\n\n];\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            selectedOption: null,\n            isRequesting: false\n        };\n    }\n\n    componentDidMount() {\n        this.fetchAllData();\n    }\n\n    handleChange = selectedOption => {\n        this.setState({ selectedOption });\n        console.log(`Option selected:`, selectedOption);\n    };\n    fetchAllData = async () => {\n        this.setState({\n            isRequesting: true\n        });\n        try {\n            const response = await newsService.fetchNews();\n\n            this.setState({ data: response.data, isRequesting: false });\n        } catch (error) {\n            this.setState({\n                isRequesting: false\n            });\n        }\n    };\n\n    buildColumns() {\n        return [\n            {\n                // Header: () => <strong>More</strong>,\n                Header: <h2>News</h2>,\n                accessor: \"news\",\n                resizable: false,\n                sortable: false,\n                minWidth: 300,\n                className: \"\",\n                headerClassName: \"no-sort\",\n                Cell: props => <span>{props.value}</span>\n            },\n            {\n                Header: <h2>Date</h2>,\n                accessor: \"date\",\n                resizable: false,\n                minWidth: 80,\n                sortable: false,\n                headerClassName: \"no-sort\",\n                Cell: props => <span>{props.value}</span>\n            },\n            {\n                Header: <h2>Link</h2>,\n                accessor: \"link\",\n                resizable: false,\n                minWidth: 100,\n                sortable: false,\n                headerClassName: \"no-sort\",\n                Cell: e =><a href={e.value}> {e.value} </a>\n            },\n            {\n                Header: <h2>Disaster Type</h2>,\n                accessor: \"disasterType\",\n                resizable: false,\n                minWidth: 100,\n                sortable: false,\n                headerClassName: \"no-sort\"\n            }\n\n        ];\n    }\n\n    filterNews = async () => {\n        console.log(\"im here\", this.state.selectedOption.value);\n        this.setState({\n            isRequesting: true\n        });\n        try {\n            // const data = {\n            //     disasterType: this.state.selectedOption.value\n            // };\n            const data = this.state.selectedOption.value;\n            const response = await newsService.filterNews(data);\n\n            this.setState({ data: response.data, isRequesting: false });\n        } catch (error) {\n            console.log(error)\n            swal(\"No news under this category\")\n            this.setState({\n                isRequesting: false\n            });\n        }\n    };\n\n    render() {\n        // if (this.state.isRequesting) {\n        //     return <Spinner />;\n        // }\n\n        return (\n            <div className=\"container\">\n                {this.state.data.length > 0 && (\n                    <React.Fragment>\n                        <div className=\"form-group\">\n                            <label className=\"form-group__label form-group__label--block\">\n                                Targeted area\n                            </label>\n\n                            <Select\n                                value={this.state.selectedOption}\n                                onChange={this.handleChange}\n                                options={options}\n                            />\n                            <div className=\"Popup__inner__footer\">\n                                <button\n                                    className=\"btn btn--blue\"\n                                    onClick={this.filterNews}\n                                >\n                                    Filter\n                                </button>\n                            </div>\n                        </div>\n                        <ReactTable\n                            data={this.state.data}\n                            columns={this.buildColumns()}\n                            showPagination={true}\n                            defaultPageSize={15}\n                            filterable={false}\n                            pageSizeOptions={[5, 10, 15, 20]}\n                        />\n                        {/* <div className=\"block hidden-md\">\n                            <div className=\"block__title\">\n                                <h2>asasas</h2>\n                            </div>\n                            <div className=\"block__content\">\n                                <ReactTable\n                                    data={this.state.data}\n                                    columns={this.buildColumns()}\n                                    showPagination={true}\n                                    defaultPageSize={15}\n                                    filterable={true}\n                                    pageSizeOptions={[5, 10, 15, 20]}\n                                />\n                            </div>\n                        </div> */}\n                    </React.Fragment>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default Home;\n","import React from \"react\";\nimport \"./App.css\";\nimport Home from \"./components/home/Home\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Home />\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./public.js\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}